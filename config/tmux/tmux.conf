# Set prefix
unbind-key C-b
set -g prefix C-e
bind-key C-e send-prefix

# Change split bindings and behavior
bind-key u split-window -h -c "#{pane_current_path}"
bind-key o split-window -v -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"
unbind-key '"'
unbind-key %

# Use vim bindings for pane movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key k select-pane -U
bind-key j select-pane -D

bind-key C-h swap-window -t:-1 \; select-window -t -1
bind-key C-l swap-window -t:+1 \; select-window -t +1

# Start at 1 and bind pane switching
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

bind-key -n M-! swap-window -t 1 \; select-window -t 1
bind-key -n M-@ swap-window -t 2 \; select-window -t 2
bind-key -n M-# swap-window -t 3 \; select-window -t 3
bind-key -n M-$ swap-window -t 4 \; select-window -t 4
bind-key -n M-% swap-window -t 5 \; select-window -t 5
bind-key -n M-^ swap-window -t 6 \; select-window -t 6
bind-key -n M-& swap-window -t 7 \; select-window -t 7
bind-key -n M-* swap-window -t 8 \; select-window -t 8
bind-key -n M-( swap-window -t 9 \; select-window -t 9

# Bind pane resize
bind-key -r M-h resize-pane -L 5
bind-key -r M-l resize-pane -R 5
bind-key -r M-k resize-pane -U 5
bind-key -r M-j resize-pane -D 5

# Use vim bindings for copy mode
set -g mode-keys vi
set -g history-limit 10000

bind-key v copy-mode
unbind-key p
bind-key p paste-buffer

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key / copy-mode \; send-keys "/"
bind-key ? copy-mode \; send-keys "?"

# Instantly send escape key
set -sg escape-time 0

# Configure true color and term env
set -g default-terminal "screen-256color"
set -ga terminal-overrides "*256col*:Tc"
set-option -sa terminal-overrides ",xterm-kitty:RGB"
set -as terminal-overrides ",*:Smulx=\E[4::%p1%dm"
set -as terminal-overrides ",*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m"

# Disable all bell behavior
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# Enable mouse support
set -g mouse on

# Use default shell
set-option -g default-shell $SHELL

# Apply theme
set-option -g mode-style bg=brightblack,fg=default
set-option -g status-position bottom
set-option -g status-interval 5
set-option -g status-style bg=default,fg=#eeffff

set-option -g status-left-length 40
set-option -g status-left "#[fg=brightwhite,bg=brightblack] #S #[fg=default,bg=default] "

set-option -g window-status-format "#[fg=#eeffff,bg=brightblack] #I #[fg=#eeffff,bg=#404040] #(basename '#{pane_current_path}') "
set-option -g window-status-current-format "#[fg=#212121,bg=green] #I #[fg=#212121,bg=blue] #(basename '#{pane_current_path}') "

set-option -g status-justify left
set-option -g status-right-length 40
set-option -g status-right " #[fg=brightwhite,bg=brightblack] #(whoami)@#h "

set-option -g message-style bg=default,fg=default
set-option -g pane-border-style bg=default,fg=brightblack
set-option -g pane-active-border-style bg=default,fg=blue

set-option -g display-panes-colour brightblack
set-option -g display-panes-active-colour brightwhite
