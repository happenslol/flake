[
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-n": "project_panel::ToggleFocus",
      "ctrl-l": "agent::ToggleFocus",
      "ctrl-m": "terminal_panel::ToggleFocus"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-l": "agent::ToggleFocus",
      "ctrl-m": "terminal_panel::ToggleFocus",
      "space m": "pane::RevealInProjectPanel"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-m": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "ctrl-n": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "AgentPanel > MessageEditor > Editor",
    "bindings": {
      "ctrl-l": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      ";": "command_palette::Toggle",
      "s": "vim::PushSneak",
      "shift-s": "vim::PushSneakBackward",
      "space w": "workspace::Save",
      "space f": "editor::Format",
      "g r a": "editor::ToggleCodeActions",
      // TODO: This should only go to errors, but there doesn't seem to be an
      // action for that yet
      "] e": "editor::GoToDiagnostic",
      "[ e": "editor::GoToPreviousDiagnostic"
    }
  },
  {
    "context": "VimControl",
    "bindings": {
      "k": ["vim::Up", { "display_lines": true }],
      "j": ["vim::Down", { "display_lines": true }]
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      ";": "vim::VisualCommand",
      "shift-s": ["vim::PushAddSurrounds", {}],
      "ctrl-l": "assistant::InlineAssist",
      "shift-k": "editor::MoveLineUp",
      "shift-j": "editor::MoveLineDown",
      ">": "editor::Indent",
      "<": "editor::Outdent",
      "g w": "vim::Rewrap"
    }
  },
  {
    "context": "VimControl && VimCount",
    "bindings": {
      ";": "vim::CountCommand"
    }
  },
  {
    "context": "ChangesList || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView || Welcome",
    "bindings": {
      ";": "command_palette::Toggle"
    }
  },
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      "ctrl-j": "editor::AcceptEditPrediction",
      "tab": "editor::Tab",
      "alt-l": null
    }
  },
  {
    "context": "Editor && edit_prediction_conflict",
    "bindings": {
      "ctrl-j": "editor::AcceptEditPrediction",
      "tab": "editor::Tab",
      "alt-l": null
    }
  }
]
